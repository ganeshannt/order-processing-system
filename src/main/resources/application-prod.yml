# =============================================================================
# PROD PROFILE - Production Environment
# =============================================================================
# Activate with: --spring.profiles.active=prod
# Or set environment variable: SPRING_PROFILES_ACTIVE=prod

spring:
  config:
    activate:
      on-profile: prod

  datasource:
    # Production should use external database (PostgreSQL, MySQL, etc.)
    # H2 is used here only for demonstration
    # In real production, use:
    # url: jdbc:postgresql://localhost:5432/orderdb
    # driver-class-name: org.postgresql.Driver
    url: jdbc:h2:file:./data/orderdb_prod  # File-based H2 for persistence
    driver-class-name: org.h2.Driver
    username: ${DB_USERNAME:sa}  # Read from environment variable
    password: ${DB_PASSWORD:}     # Read from environment variable
    hikari:
      maximum-pool-size: 20
      minimum-idle: 10
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  h2:
    console:
      enabled: false  # Disabled in production for security

  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: update  # Only update schema, never drop
    show-sql: false     # Don't log SQL in production
    properties:
      hibernate:
        format_sql: false
        use_sql_comments: false
        jdbc:
          batch_size: 50  # Larger batch size for production
        order_inserts: true
        order_updates: true
        # Production performance optimizations
        query:
          plan_cache_max_size: 2048
        jdbc:
          fetch_size: 50
    open-in-view: false

  # No automatic data initialization in production
  sql:
    init:
      mode: never  # Never execute initialization scripts in production

# Production logging - structured JSON format
logging:
  level:
    root: WARN
    io.ganeshannt.asm.ops: INFO
    org.springframework.web: WARN
    org.hibernate.SQL: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %logger{36} - %msg%n"

# Production server settings
server:
  port: ${SERVER_PORT:8080}
  compression:
    enabled: true  # Enable response compression
    mime-types: application/json,application/xml,text/html,text/xml,text/plain